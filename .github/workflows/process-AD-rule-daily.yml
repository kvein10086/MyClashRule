name: Process AWAvenue Ads Rule Daily

on:
  schedule:
    - cron: '0 16 * * *' # 每天的北京时间 00:00 运行一次 (UTC+8 转 UTC 为 16:00)
  workflow_dispatch: # 手动触发工作流

jobs:
  process-rule:
    runs-on: ubuntu-latest  # 选择一个合适的虚拟环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 拉取代码仓库中的文件

      - name: Download AWAvenue-Ads-Rule-Clash.yaml
        run: |
          # 从远程仓库下载最新的 AWAvenue 广告规则文件
          curl -o AWAvenue-Ads-Rule-Clash.yaml https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml

      - name: Process the file
        run: |
          # 第一步：将规则文件中的 '- ' 替换为 'DOMAIN-SUFFIX,'，并移除单引号
          sed "s/- '/DOMAIN-SUFFIX,/g" AWAvenue-Ads-Rule-Clash.yaml | sed "s/'//g" > temp.list
          
          # 第二步：移除规则文件中第一行至首个 'DOMAIN-SUFFIX' 之前的内容
          sed -n '/DOMAIN-SUFFIX/,$p' temp.list > temp2.list
          
          # 第三步：移除每行前导空格，并保存为最终的规则文件
          sed 's/^ *//' temp2.list > AWAvenue-Ads-Rule.list

      - name: Compare files
        id: compare
        run: |
          # 检查仓库中是否存在旧的规则文件
          if git show HEAD:AWAvenue-Ads-Rule.list > old_list.txt 2>/dev/null; then
            # 如果存在旧文件，比较新旧规则文件的差异
            diff old_list.txt AWAvenue-Ads-Rule.list > diff_output.txt || true
          else
            # 如果没有旧文件，记录为第一次运行
            echo "文件不存在，直接生成新的规则文件。" > diff_output.txt
          fi

          # 如果没有差异，则记录文件没有变更
          if [ ! -s diff_output.txt ]; then
            echo "文件没有变更。" > diff_output.txt
          fi

      - name: 更新 README.md 中的日志部分
        run: |
          # 生成最新的日志内容（以北京时间显示）
          LOG_CONTENT="### $(date -u '+%Y-%m-%d %H:%M:%S' | awk '{cmd="TZ=Asia/Shanghai date -d '"$0"' +\\"%Y-%m-%d %H:%M:%S\\""; cmd | getline new_time; close(cmd); print new_time}')\n\n\`\`\`diff\n$(cat diff_output.txt)\n\`\`\`"

          # 使用日志的明确标识定位并替换对应部分
          awk -v log_start="## 广告规则更新日志" -v log_content="${LOG_CONTENT}" '
            BEGIN {in_log=0}
            $0 ~ log_start {print $0; in_log=1; next}  # 定位日志部分开头
            in_log && /^### / {print log_content; next}  # 替换从时间开始到 diff 内容
            in_log && /^```$/ {in_log=0; next}  # 确定结束标识后停止
            !in_log {print}
          ' README.md > README.tmp && mv README.tmp README.md

      - name: Commit and push changes
        env:
          PAT: ${{ secrets.PAT }} # 使用配置的 PAT
        run: |
          # 配置 Git 用户信息，用于提交到 GitHub
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 添加并提交文件
          git add AWAvenue-Ads-Rule.list README.md
          git commit -m "更新广告拦截规则文件和最新日志"
          git push https://x-access-token:${{ secrets.PAT }}@github.com/kvein10086/MyClashRule.git HEAD:main
