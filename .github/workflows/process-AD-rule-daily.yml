name: Process AWAvenue Ads Rule Daily

on:
  schedule:
    - cron: '0 0 * * *' # 每天的 UTC 时间 00:00 运行一次
  workflow_dispatch: # 手动触发工作流

jobs:
  process-rule:
    runs-on: ubuntu-latest  # 选择一个合适的虚拟环境

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # 拉取代码仓库中的文件

      - name: Download AWAvenue-Ads-Rule-Clash.yaml
        run: |
          curl -o AWAvenue-Ads-Rule-Clash.yaml https://raw.githubusercontent.com/TG-Twilight/AWAvenue-Ads-Rule/main/Filters/AWAvenue-Ads-Rule-Clash.yaml

      - name: Process the file
        run: |
          # Step 1: Replace '- ' with 'DOMAIN-SUFFIX,' and remove single quotes
          sed "s/- '/DOMAIN-SUFFIX,/g" AWAvenue-Ads-Rule-Clash.yaml | sed "s/'//g" > temp.list
          
          # Step 2: Remove content above the first DOMAIN-SUFFIX
          sed -n '/DOMAIN-SUFFIX/,$p' temp.list > temp2.list
          
          # Step 3: Remove leading spaces from each line and save to AWAvenue-Ads-Rule.list
          sed 's/^ *//' temp2.list > AWAvenue-Ads-Rule.list

      - name: Compare files
        id: compare
        run: |
          # 检查仓库中是否有旧的规则文件
          if git show HEAD:AWAvenue-Ads-Rule.list > old_list.txt 2>/dev/null; then
            # 如果存在旧文件，进行对比
            diff old_list.txt AWAvenue-Ads-Rule.list > diff_output.txt || true
          else
            # 如果没有旧文件，记录为 "这是第一次运行"
            echo "文件不存在，直接生成新的规则文件。" > diff_output.txt
          fi

          # 如果 diff_output.txt 文件为空，说明文件没有变更
          if [ ! -s diff_output.txt ]; then
            echo "文件没有变更。" > diff_output.txt
          fi

      - name: 更新 README.md 中的日志部分
        run: |
          # 定义日志头和尾的标记
          LOG_START="## 广告规则更新日志"
          LOG_END="##"
          # 生成最新的日志内容
          LOG_CONTENT="### $(date '+%Y-%m-%d %H:%M:%S')\n\n\`\`\`diff\n$(cat diff_output.txt)\n\`\`\`"

          # 如果 README.md 文件不存在，则创建一个
          if [ ! -f README.md ]; then
            echo "# MyClashRule" > README.md
            echo "本仓库包含 AWAvenue 的 Clash 规则。" >> README.md
            echo "" >> README.md
            echo "${LOG_START}" >> README.md
            echo "" >> README.md
            echo -e "${LOG_CONTENT}" >> README.md
          else
            # 如果 README.md 存在，替换日志部分
            awk -v log_start="${LOG_START}" -v log_end="${LOG_END}" -v log_content="${LOG_CONTENT}" '
              BEGIN {found=0}
              $0 ~ log_start {found=1; print log_start; print ""; print log_content; next}
              $0 ~ log_end && found {found=0}
              !found {print}
            ' README.md > README.tmp && mv README.tmp README.md
          fi

      - name: Commit and push changes
        env:
          PAT: ${{ secrets.PAT }} # 使用配置的 PAT
        run: |
          # 配置 Git 用户信息
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # 添加并提交文件
          git add AWAvenue-Ads-Rule.list README.md
          git commit -m "更新广告拦截规则文件和最新日志"
          git push https://x-access-token:${{ secrets.PAT }}@github.com/kvein10086/MyClashRule.git HEAD:main
